diff --git a/CMakeLists.txt b/CMakeLists.txt
index 48dd73e..dbb435b 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -59,11 +59,11 @@ if(WIN32)
 endif()
 find_package(Python3 COMPONENTS Interpreter Development)
 
-if(IS_DEBUG_BUILD AND WIN32)
-    # Explicitly setting SHIBOKEN_PYTHON_LIBRARIES variable to avoid PYTHON_DEBUG_LIBRARY-NOTFOUND
-    # link errors on Windows debug builds.
-    set(SHIBOKEN_PYTHON_LIBRARIES ${Python3_LIBRARIES})
-endif()
+#if(IS_DEBUG_BUILD AND WIN32)
+#    # Explicitly setting SHIBOKEN_PYTHON_LIBRARIES variable to avoid PYTHON_DEBUG_LIBRARY-NOTFOUND
+#    # link errors on Windows debug builds.
+#    set(SHIBOKEN_PYTHON_LIBRARIES ${Python3_LIBRARIES})
+#endif()
 
 set(QT_COMPONENTS Core Gui Network Widgets Concurrent)
 if(NATRON_QT6)
@@ -85,28 +85,35 @@ if(NATRON_QT6)
     set(PYSIDE_LIB PySide6::pyside6)
 else()
     find_package(Qt5 5.15 CONFIG REQUIRED COMPONENTS ${QT_COMPONENTS})
-    find_package(Shiboken2 5.15 CONFIG REQUIRED COMPONENTS libshiboken2 shiboken2)
+    find_package(shiboken2 5.15 CONFIG REQUIRED COMPONENTS libshiboken2 shiboken2)
 
-    find_package(PySide2 5.15 CONFIG REQUIRED COMPONENTS pyside2)
+    find_package(pyside2 5.15 CONFIG REQUIRED COMPONENTS pyside2)
     set(QT_VERSION_MAJOR 5)
     set(PYSIDE_VERSION_MAJOR 2)
 
-    get_target_property(PYSIDE_INCLUDE_DIRS PySide2::pyside2 INTERFACE_INCLUDE_DIRECTORIES)
-    set(QTCORE_INCLUDE_DIRS ${Qt5Core_INCLUDE_DIRS})
-    set(QTGUI_INCLUDE_DIRS ${Qt5Gui_INCLUDE_DIRS})
-    set(QTWIDGETS_INCLUDE_DIRS ${Qt5Widgets_INCLUDE_DIRS})
-
-    set(SHIBOKEN_EXE Shiboken2::shiboken2)
-    set(SHIBOKEN_LIB Shiboken2::libshiboken)
-    set(PYSIDE_LIB PySide2::pyside2)
+    get_target_property(PYSIDE_INCLUDE_DIRS pyside2::libpyside2 INTERFACE_INCLUDE_DIRECTORIES)
+    get_target_property(QTCORE_INCLUDE_DIRS Qt5::Core INTERFACE_INCLUDE_DIRECTORIES)
+    get_target_property(QTGUI_INCLUDE_DIRS Qt5::Gui INTERFACE_INCLUDE_DIRECTORIES)
+    get_target_property(QTWIDGETS_INCLUDE_DIRS Qt5::Widgets INTERFACE_INCLUDE_DIRECTORIES)
+
+    set(SHIBOKEN_EXE shiboken2::shiboken2bin)
+    if(NOT TARGET shiboken2::shiboken2bin)
+        message("\n\nSetting up shiboken2::shiboken2bin target\n")
+        add_executable(shiboken2::shiboken2bin IMPORTED GLOBAL)
+        set_target_properties(shiboken2::shiboken2bin PROPERTIES IMPORTED_LOCATION "${shiboken2_INCLUDE_DIR}/../../bin/shiboken2")
+    else()
+        message("\n\nshiboken2::shiboken2bin already defined\n")
+    endif()
+    set(SHIBOKEN_LIB shiboken2::libshiboken2)
+    set(PYSIDE_LIB pyside2::pyside2)
 endif()
 
-if(IS_DEBUG_BUILD AND WIN32)
-    # Remove NDEBUG from Shiboken INTERFACE_COMPILE_DEFINITIONS so it is not inherited in debug builds.
-    get_property(SHIBOKEN_DEFS TARGET ${SHIBOKEN_LIB} PROPERTY INTERFACE_COMPILE_DEFINITIONS)
-    list(REMOVE_ITEM SHIBOKEN_DEFS NDEBUG)
-    set_property(TARGET ${SHIBOKEN_LIB} PROPERTY INTERFACE_COMPILE_DEFINITIONS SHIBOKEN_DEFS)
-endif()
+#if(IS_DEBUG_BUILD AND WIN32)
+#    # Remove NDEBUG from Shiboken INTERFACE_COMPILE_DEFINITIONS so it is not inherited in debug builds.
+#    get_property(SHIBOKEN_DEFS TARGET ${SHIBOKEN_LIB} PROPERTY INTERFACE_COMPILE_DEFINITIONS)
+#    list(REMOVE_ITEM SHIBOKEN_DEFS NDEBUG)
+#    set_property(TARGET ${SHIBOKEN_LIB} PROPERTY INTERFACE_COMPILE_DEFINITIONS SHIBOKEN_DEFS)
+#endif()
 
 #Since in Natron and OpenFX all strings are supposed UTF-8 and that the constructor
 #for QString(const char*) assumes ASCII strings, we may run into troubles
@@ -119,7 +126,12 @@ if (MSVC)
 else()
     SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wmissing-prototypes" )
     add_compile_options(-Wall -Wextra -Wmissing-declarations -Wno-multichar -Winit-self -Wno-long-long
-                        -Wvla -Wdate-time -Wno-format-overflow -Wno-deprecated-copy)
+                        -Wvla -Wdate-time -Wno-deprecated-copy)
+    if (CMAKE_CXX_COMPILER_ID STREQUAL "GNU" OR
+        (CMAKE_CXX_COMPILER_ID STREQUAL "Clang" AND
+         CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL '18.1.6'))
+        add_compile_options(-Wno-format-overflow)
+    endif()
     if (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
         add_compile_options(-Wshift-overflow=2 -Wduplicated-cond -Wno-stringop-overflow)
     endif()
@@ -134,9 +146,10 @@ if(UNIX AND NOT APPLE)
     find_package(ECM NO_MODULE)
     set(CMAKE_MODULE_PATH ${ECM_MODULE_PATH} ${CMAKE_MODULE_PATH})
     find_package(X11 REQUIRED)
-    find_package(Wayland COMPONENTS Client Egl)
+    find_package(wayland COMPONENTS wayland-client wayland-egl)
 elseif(APPLE)
     enable_language(OBJCXX)
+    find_package(OPENGL)
 elseif(WIN32)
     enable_language(RC)
     add_compile_definitions(WINDOWS WIN32 _UNICODE UNICODE NOMINMAX QHTTP_SERVER_STATIC)
diff --git a/Engine/CMakeLists.txt b/Engine/CMakeLists.txt
index 576f7b2..f6bd5d4 100644
--- a/Engine/CMakeLists.txt
+++ b/Engine/CMakeLists.txt
@@ -17,19 +17,22 @@
 # along with Natron.  If not, see <http://www.gnu.org/licenses/gpl-2.0.html>
 # ***** END LICENSE BLOCK *****
 
-include(FindPkgConfig)
-
-pkg_check_modules(Cairo REQUIRED IMPORTED_TARGET cairo fontconfig)
+find_package(cairo COMPONENTS cairo)
+find_package(Fontconfig COMPONENTS Fontconfig)
 
 file(GLOB NatronEngine_HEADERS *.h)
 file(GLOB NatronEngine_SOURCES *.cpp)
 
 set(PYENGINE_OUT ${CMAKE_CURRENT_BINARY_DIR}/Qt${QT_VERSION_MAJOR})
 set(PYENGINE_INCLUDE_DIRS ${PYSIDE_INCLUDE_DIRS} ${PYSIDE_INCLUDE_DIRS}/QtCore)
-list(APPEND PYENGINE_INCLUDE_DIRS ${QTCORE_INCLUDE_DIRS} ${Python3_INCLUDE_DIRS} ${Boost_INCLUDE_DIRS})
+list(APPEND PYENGINE_INCLUDE_DIRS ${Python3_INCLUDE_DIRS} ${Boost_INCLUDE_DIRS})
 list(TRANSFORM PYENGINE_INCLUDE_DIRS PREPEND "-I" OUTPUT_VARIABLE PYENGINE_INCS)
 set(PYENGINE_HEADER PySide${PYSIDE_VERSION_MAJOR}_Engine_Python.h)
 
+if(APPLE)
+    list(APPEND PYENGINE_INCS "-isystem/Library/Developer/CommandLineTools/usr/include/c++/v1" "-isystem/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include" "-isystem/Library/Developer/CommandLineTools/usr/include")
+endif()
+
 set(shiboken_args
     "-std=c++17" "--enable-parent-ctor-heuristic" "--use-isnull-as-nb_nonzero"
     "--avoid-protected-hack" "--enable-pyside-extensions"
@@ -42,15 +45,17 @@ execute_process(COMMAND ${Python3_EXECUTABLE} ../tools/utils/sourceList.py types
     OUTPUT_VARIABLE PyEngine_SOURCES)
 set_property(SOURCE ${PyEngine_SOURCES} PROPERTY SKIP_AUTOGEN ON)
 add_custom_command(OUTPUT ${PyEngine_SOURCES}
-    COMMAND $<TARGET_FILE:${SHIBOKEN_EXE}> ${shiboken_args}
+    COMMAND env "LD_LIBRARY_PATH=$ENV{LD_LIBRARY_PATH}" $<TARGET_FILE:${SHIBOKEN_EXE}> ${shiboken_args} "-I$<JOIN:${QTCORE_INCLUDE_DIRS},;-I>"
+    COMMAND_EXPAND_LISTS
+    VERBATIM
     COMMAND ${Python3_EXECUTABLE} ../tools/utils/sourceCleanup.py typesystem_engine.xml ${PYENGINE_OUT}
     DEPENDS ${SHIBOKEN_EXE} ${PYENGINE_HEADER} ${NatronEngine_HEADERS} ../tools/utils/sourceCleanup.py typesystem_engine.xml
     WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
 
 if(UNIX AND NOT APPLE)
     set(XDG_LIBS ${X11_LIBRARIES})
-    if(Wayland_FOUND)
-        set(XDG_LIBS Wayland::Client Wayland::Egl ${XDG_LIBS})
+    if(wayland_FOUND)
+        set(XDG_LIBS wayland::wayland-client wayland::wayland-egl ${XDG_LIBS})
         set(XDG_DEFS __NATRON_WAYLAND__)
     endif()
 endif()
@@ -72,13 +77,13 @@ target_link_libraries(NatronEngine
         HostSupport
         Boost::headers
         Boost::serialization
-        PkgConfig::Cairo
+        cairo::cairo
     PRIVATE
         ${SHIBOKEN_LIB}
         ${PYSIDE_LIB}
-        Qt::Core
-        Qt::Concurrent
-        Qt::Network
+        Qt5::Core
+        Qt5::Concurrent
+        Qt5::Network
         Python3::Module
         ${XDG_LIBS}
         ceres
@@ -93,6 +98,10 @@ if(WIN32)
     target_link_libraries(NatronEngine PRIVATE mpr)
 endif()
 
+if(APPLE)
+    target_link_libraries(NatronEngine PRIVATE opengl::opengl)
+endif()
+
 target_include_directories(NatronEngine
     PUBLIC
         ../Global/glad$<IF:$<CONFIG:Debug>,Deb,Rel>/include
diff --git a/Gui/CMakeLists.txt b/Gui/CMakeLists.txt
index b3e06b0..e902dfe 100644
--- a/Gui/CMakeLists.txt
+++ b/Gui/CMakeLists.txt
@@ -25,8 +25,7 @@ set(PYGUI_OUT ${CMAKE_CURRENT_BINARY_DIR}/Qt${QT_VERSION_MAJOR})
 set(PYGUI_INCLUDE_DIRS . .. ../Engine ../Global ../libs/OpenFX/include)
 list(APPEND PYGUI_INCLUDE_DIRS ${PYSIDE_INCLUDE_DIRS} ${PYSIDE_INCLUDE_DIRS}/QtCore
     ${PYSIDE_INCLUDE_DIRS}/QtGui ${PYSIDE_INCLUDE_DIRS}/QtWidgets)
-list(APPEND PYGUI_INCLUDE_DIRS ${QTCORE_INCLUDE_DIRS} ${QTGUI_INCLUDE_DIRS}
-    ${QTWIDGETS_INCLUDE_DIRS} ${Python3_INCLUDE_DIRS} ${Boost_INCLUDE_DIRS})
+list(APPEND PYGUI_INCLUDE_DIRS ${Python3_INCLUDE_DIRS} ${Boost_INCLUDE_DIRS})
 list(TRANSFORM PYGUI_INCLUDE_DIRS PREPEND "-I" OUTPUT_VARIABLE PYGUI_INCS)
 set(PYGUI_HEADER PySide${PYSIDE_VERSION_MAJOR}_Gui_Python.h)
 
@@ -46,7 +45,9 @@ execute_process(COMMAND ${Python3_EXECUTABLE} ../tools/utils/sourceList.py types
     OUTPUT_VARIABLE PyGui_SOURCES)
 set_property(SOURCE ${PyGui_SOURCES} PROPERTY SKIP_AUTOGEN ON)
 add_custom_command(OUTPUT ${PyGui_SOURCES}
-    COMMAND $<TARGET_FILE:${SHIBOKEN_EXE}> ${shiboken_args}
+    COMMAND env "LD_LIBRARY_PATH=$ENV{LD_LIBRARY_PATH}" $<TARGET_FILE:${SHIBOKEN_EXE}> ${shiboken_args} "-I$<JOIN:${QTCORE_INCLUDE_DIRS},;-I>" "-I$<JOIN:${QTGUI_INCLUDE_DIRS},;-I>" "-I$<JOIN:${QTWIDGETS_INCLUDE_DIRS},;-I>"
+    COMMAND_EXPAND_LISTS
+    VERBATIM
     COMMAND ${Python3_EXECUTABLE} ../tools/utils/sourceCleanup.py typesystem_natronGui.xml ${PYGUI_OUT}
     DEPENDS ${SHIBOKEN_EXE} ${PYGUI_HEADER} NatronEngine ${NatronGui_HEADERS} ../tools/utils/sourceCleanup.py typesystem_natronGui.xml
     WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
@@ -65,11 +66,11 @@ target_link_libraries(NatronGui
     PUBLIC
         ${SHIBOKEN_LIB}
         ${PYSIDE_LIB}
-        Qt::Core
-        Qt::Concurrent
-        Qt::Network
-        Qt::Gui
-        Qt::Widgets
+        Qt5::Core
+        Qt5::Concurrent
+        Qt5::Network
+        Qt5::Gui
+        Qt5::Widgets
         ${QT_OPENGLWIDGETS}
         Python3::Module
         NatronEngine
diff --git a/HostSupport/CMakeLists.txt b/HostSupport/CMakeLists.txt
index 86d772e..37f0004 100644
--- a/HostSupport/CMakeLists.txt
+++ b/HostSupport/CMakeLists.txt
@@ -18,7 +18,7 @@
 # ***** END LICENSE BLOCK *****
 
 # see https://cmake.org/cmake/help/latest/module/FindEXPAT.html
-find_package(EXPAT REQUIRED)
+find_package(expat REQUIRED)
 
 file(GLOB HostSupport_HEADERS
     ../libs/OpenFX/HostSupport/include/*.h
@@ -46,7 +46,7 @@ set(HostSupport_SOURCES
 add_library(HostSupport STATIC ${HostSupport_SOURCES})
 target_link_libraries(HostSupport
     PRIVATE
-        EXPAT::EXPAT
+        expat::expat
 )
 target_include_directories(HostSupport
     PUBLIC
diff --git a/Renderer/CMakeLists.txt b/Renderer/CMakeLists.txt
index b54e1f2..740db68 100644
--- a/Renderer/CMakeLists.txt
+++ b/Renderer/CMakeLists.txt
@@ -25,9 +25,9 @@ add_executable(NatronRenderer ${NatronRenderer_SOURCES})
 target_link_libraries(NatronRenderer
     PRIVATE
         NatronEngine
-        Qt::Core
-        Qt::Concurrent
-        Qt::Network
+        Qt5::Core
+        Qt5::Concurrent
+        Qt5::Network
         Python3::Python
 )
 target_include_directories(NatronRenderer
diff --git a/Tests/CMakeLists.txt b/Tests/CMakeLists.txt
index f40cbcb..333e603 100644
--- a/Tests/CMakeLists.txt
+++ b/Tests/CMakeLists.txt
@@ -36,7 +36,7 @@ add_executable(Tests ${Tests_HEADERS} ${Tests_SOURCES})
 target_link_libraries(Tests
     PRIVATE
         NatronEngine
-        Qt::Core
+        Qt5::Core
         Python3::Python
         openMVG
 )
diff --git a/libs/libmv/libmv/logging/logging.h b/libs/libmv/libmv/logging/logging.h
index dcc6a3a..a544f60 100644
--- a/libs/libmv/libmv/logging/logging.h
+++ b/libs/libmv/libmv/logging/logging.h
@@ -21,6 +21,9 @@
 #ifndef LIBMV_LOGGING_LOGGING_H
 #define LIBMV_LOGGING_LOGGING_H
 
+#ifdef ERROR
+#undef ERROR
+#endif
 #include <glog/logging.h>
 
 #ifdef DEBUG
@@ -34,7 +37,7 @@
 true ? (void) 0 : google::LogMessageVoidify() & LOG(severity)
 #endif
 
-#define LG LIBMV_LOG(INFO)
+//#define LG LIBMV_LOG(INFO)
 #define V0 LIBMV_LOG(INFO)
 #define V1 LIBMV_LOG(INFO)
 #define V2 LIBMV_LOG(INFO)
diff --git a/libs/qhttpserver/CMakeLists.txt b/libs/qhttpserver/CMakeLists.txt
index bac81b9..7a3b3a2 100644
--- a/libs/qhttpserver/CMakeLists.txt
+++ b/libs/qhttpserver/CMakeLists.txt
@@ -29,6 +29,6 @@ set(qhttpserver_HEADERS
 file(GLOB qhttpserver_SOURCES src/*.cpp)
 set(qhttpserver_SOURCES ${qhttpserver_SOURCES} http-parser/http_parser.c)
 add_library(qhttpserver STATIC ${qhttpserver_HEADERS} ${qhttpserver_SOURCES})
-target_link_libraries(qhttpserver PRIVATE Qt::Core Qt::Network)
+target_link_libraries(qhttpserver PRIVATE Qt5::Core Qt5::Network)
 target_include_directories(qhttpserver PRIVATE http-parser)
 set_target_properties(qhttpserver PROPERTIES POSITION_INDEPENDENT_CODE ON)
