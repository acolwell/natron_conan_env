name: Tests

on:
  workflow_dispatch: {}
  push: {}
  pull_request: {}

  schedule:
    - cron:  '12 12 * * *'

jobs:
  build_test:
    strategy:
      fail-fast: false
      matrix:
        os:
          - runs_on: ubuntu-latest
            conan_profile: linux_default
            install_artifact_name: natron-linux_default.tar

          - runs_on: windows-latest
            conan_profile: msvc_profile
            install_artifact_name: natron-msvc_profile

          - runs_on: macos-13
            conan_profile: macos_default
            install_artifact_name: natron-macos_default.tar

          - runs_on: macos-14
            conan_profile: macos_arm_default
            install_artifact_name: natron-macos_arm_default.tar

    name: Build Natron Installer ${{ matrix.os.conan_profile }}
    runs-on: ${{ matrix.os.runs_on }}

    env:
      CONAN_HOME: ${{ matrix.os.runs_on == 'windows-latest' && format('D:\cbw', github.workspace) || '~/.conan2'}}

    steps:
      - name: Checkout branch
        uses: actions/checkout@v4.1.1
        with:
          submodules: recursive

      - name: Setup Conan environment
        uses: ./.github/workflows/conan_setup_action
        with:
          conan_profile: ${{ matrix.os.conan_profile }}
          restore_cache_filename: ${{ format('conan_cache_save-{0}.tgz', matrix.os.conan_profile) }}

      - name: Remove old recipes
        run: |
          conan remove -c "openfx-misc/*"
          conan remove -c "openfx-io/*"
          conan remove -c "natron/*"
          conan remove -c "natron_installer/*"

      - name: Build openfx-misc
        run: |
          conan install -pr:a ${{ matrix.os.conan_profile }} --requires 'openfx-misc/master' --update 'openfx-misc/master' --build 'openfx-misc/master' --build missing --lockfile-partial

          # Remove unnecessary files
          conan cache clean '*'

      - name: Build openfx-io
        run: |
          conan install -pr:a ${{ matrix.os.conan_profile }} --requires 'openfx-io/master' --update 'openfx-io/master' --build 'openfx-io/master' --build missing --lockfile-partial

          # Remove unnecessary files
          conan cache clean '*'

      - name: Build Natron
        run: |
          conan install -pr:a ${{ matrix.os.conan_profile }} --requires 'natron/conan_build' --update 'natron/conan_build' --build 'natron/conan_build' --build missing --lockfile-partial

          # Remove unnecessary files
          conan cache clean '*'

      - name: Build Natron Installer
        run: |
          conan install -pr:a ${{ matrix.os.conan_profile }} --requires 'natron_installer/conan_build' --update 'natron_installer/conan_build' --build 'natron_installer/conan_build' --build missing --lockfile-partial --lockfile-out '${{ matrix.os.conan_profile }}-conan.lock'

      - name: Dump New Lockfile
        run: |
          cat '${{ matrix.os.conan_profile }}-conan.lock'

      - name: Deploy Natron Installer
        run: |
          conan install -pr:a ${{ matrix.os.conan_profile }} --requires 'natron_installer/conan_build' --lockfile-partial -d direct_deploy --deployer-folder natron_deploy

      - name: Tar Deploy directory
        if: endsWith(matrix.os.install_artifact_name, '.tar')
        run: |
          tar -cv -f ${{ matrix.os.install_artifact_name }} -C natron_deploy/direct_deploy natron_installer

      - name: Upload Natron Installer Deployment
        uses: actions/upload-artifact@v4.3.1
        with:
          name:  ${{ matrix.os.install_artifact_name }}
          path:  ${{ endsWith(matrix.os.install_artifact_name, '.tar') &&  matrix.os.install_artifact_name || 'natron_deploy/direct_deploy/natron_installer' }}

